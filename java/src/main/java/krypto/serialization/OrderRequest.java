// automatically generated by the FlatBuffers compiler, do not modify

package krypto.serialization;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class OrderRequest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static OrderRequest getRootAsOrderRequest(ByteBuffer _bb) { return getRootAsOrderRequest(_bb, new OrderRequest()); }
  public static OrderRequest getRootAsOrderRequest(ByteBuffer _bb, OrderRequest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public OrderRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long timestamp() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long securityId() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long price() { int o = __offset(8); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long quantity() { int o = __offset(10); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public byte side() { int o = __offset(12); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public String orderId() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer orderIdAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer orderIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  public byte tif() { int o = __offset(16); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public String trader() { int o = __offset(18); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer traderAsByteBuffer() { return __vector_as_bytebuffer(18, 1); }
  public ByteBuffer traderInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 18, 1); }
  public String book() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer bookAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer bookInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }

  public static int createOrderRequest(FlatBufferBuilder builder,
      long timestamp,
      long security_id,
      long price,
      long quantity,
      byte side,
      int order_idOffset,
      byte tif,
      int traderOffset,
      int bookOffset) {
    builder.startTable(9);
    OrderRequest.addQuantity(builder, quantity);
    OrderRequest.addPrice(builder, price);
    OrderRequest.addSecurityId(builder, security_id);
    OrderRequest.addTimestamp(builder, timestamp);
    OrderRequest.addBook(builder, bookOffset);
    OrderRequest.addTrader(builder, traderOffset);
    OrderRequest.addOrderId(builder, order_idOffset);
    OrderRequest.addTif(builder, tif);
    OrderRequest.addSide(builder, side);
    return OrderRequest.endOrderRequest(builder);
  }

  public static void startOrderRequest(FlatBufferBuilder builder) { builder.startTable(9); }
  public static void addTimestamp(FlatBufferBuilder builder, long timestamp) { builder.addLong(0, timestamp, 0L); }
  public static void addSecurityId(FlatBufferBuilder builder, long securityId) { builder.addLong(1, securityId, 0L); }
  public static void addPrice(FlatBufferBuilder builder, long price) { builder.addLong(2, price, 0L); }
  public static void addQuantity(FlatBufferBuilder builder, long quantity) { builder.addLong(3, quantity, 0L); }
  public static void addSide(FlatBufferBuilder builder, byte side) { builder.addByte(4, side, 0); }
  public static void addOrderId(FlatBufferBuilder builder, int orderIdOffset) { builder.addOffset(5, orderIdOffset, 0); }
  public static void addTif(FlatBufferBuilder builder, byte tif) { builder.addByte(6, tif, 0); }
  public static void addTrader(FlatBufferBuilder builder, int traderOffset) { builder.addOffset(7, traderOffset, 0); }
  public static void addBook(FlatBufferBuilder builder, int bookOffset) { builder.addOffset(8, bookOffset, 0); }
  public static int endOrderRequest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public OrderRequest get(int j) { return get(new OrderRequest(), j); }
    public OrderRequest get(OrderRequest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

