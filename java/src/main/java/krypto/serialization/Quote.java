// automatically generated by the FlatBuffers compiler, do not modify

package krypto.serialization;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Quote extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static Quote getRootAsQuote(ByteBuffer _bb) { return getRootAsQuote(_bb, new Quote()); }
  public static Quote getRootAsQuote(ByteBuffer _bb, Quote obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Quote __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long timestamp() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long securityId() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long bid() { int o = __offset(8); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long ask() { int o = __offset(10); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long last() { int o = __offset(12); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long bidQuantity() { int o = __offset(14); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long askQuantity() { int o = __offset(16); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long lastQuantity() { int o = __offset(18); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }

  public static int createQuote(FlatBufferBuilder builder,
      long timestamp,
      long security_id,
      long bid,
      long ask,
      long last,
      long bid_quantity,
      long ask_quantity,
      long last_quantity) {
    builder.startTable(8);
    Quote.addLastQuantity(builder, last_quantity);
    Quote.addAskQuantity(builder, ask_quantity);
    Quote.addBidQuantity(builder, bid_quantity);
    Quote.addLast(builder, last);
    Quote.addAsk(builder, ask);
    Quote.addBid(builder, bid);
    Quote.addSecurityId(builder, security_id);
    Quote.addTimestamp(builder, timestamp);
    return Quote.endQuote(builder);
  }

  public static void startQuote(FlatBufferBuilder builder) { builder.startTable(8); }
  public static void addTimestamp(FlatBufferBuilder builder, long timestamp) { builder.addLong(0, timestamp, 0L); }
  public static void addSecurityId(FlatBufferBuilder builder, long securityId) { builder.addLong(1, securityId, 0L); }
  public static void addBid(FlatBufferBuilder builder, long bid) { builder.addLong(2, bid, 0L); }
  public static void addAsk(FlatBufferBuilder builder, long ask) { builder.addLong(3, ask, 0L); }
  public static void addLast(FlatBufferBuilder builder, long last) { builder.addLong(4, last, 0L); }
  public static void addBidQuantity(FlatBufferBuilder builder, long bidQuantity) { builder.addLong(5, bidQuantity, 0L); }
  public static void addAskQuantity(FlatBufferBuilder builder, long askQuantity) { builder.addLong(6, askQuantity, 0L); }
  public static void addLastQuantity(FlatBufferBuilder builder, long lastQuantity) { builder.addLong(7, lastQuantity, 0L); }
  public static int endQuote(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Quote get(int j) { return get(new Quote(), j); }
    public Quote get(Quote obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

