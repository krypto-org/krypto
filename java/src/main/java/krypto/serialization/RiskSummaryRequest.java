// automatically generated by the FlatBuffers compiler, do not modify

package krypto.serialization;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class RiskSummaryRequest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static RiskSummaryRequest getRootAsRiskSummaryRequest(ByteBuffer _bb) { return getRootAsRiskSummaryRequest(_bb, new RiskSummaryRequest()); }
  public static RiskSummaryRequest getRootAsRiskSummaryRequest(ByteBuffer _bb, RiskSummaryRequest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public RiskSummaryRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte type() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public String trader() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer traderAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer traderInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public long securityId() { int o = __offset(8); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public String book() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer bookAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer bookInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }

  public static int createRiskSummaryRequest(FlatBufferBuilder builder,
      byte type,
      int traderOffset,
      long security_id,
      int bookOffset) {
    builder.startTable(4);
    RiskSummaryRequest.addSecurityId(builder, security_id);
    RiskSummaryRequest.addBook(builder, bookOffset);
    RiskSummaryRequest.addTrader(builder, traderOffset);
    RiskSummaryRequest.addType(builder, type);
    return RiskSummaryRequest.endRiskSummaryRequest(builder);
  }

  public static void startRiskSummaryRequest(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addType(FlatBufferBuilder builder, byte type) { builder.addByte(0, type, 0); }
  public static void addTrader(FlatBufferBuilder builder, int traderOffset) { builder.addOffset(1, traderOffset, 0); }
  public static void addSecurityId(FlatBufferBuilder builder, long securityId) { builder.addLong(2, securityId, 0L); }
  public static void addBook(FlatBufferBuilder builder, int bookOffset) { builder.addOffset(3, bookOffset, 0); }
  public static int endRiskSummaryRequest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public RiskSummaryRequest get(int j) { return get(new RiskSummaryRequest(), j); }
    public RiskSummaryRequest get(RiskSummaryRequest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

